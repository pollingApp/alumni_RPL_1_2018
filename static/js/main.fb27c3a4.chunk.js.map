{"version":3,"sources":["components/NavbarComponent.js","components/FooterComponent.js","components/HeaderComponent.js","components/ListUserComponent.js","components/ResultVoteComponent.js","utils/constants.js","components/VotingComponent.js","components/CardTokenComponent.js","pages/Home.js","pages/Tentang.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarComponent","title","Navbar","bg","variant","expand","className","Container","Brand","href","process","alt","src","width","height","Toggle","Collapse","id","Nav","Link","icon","faHome","FooterComponent","Row","Col","faHeart","color","Component","HeaderComponent","show","ListUserComponent","token","ket","name","img","umur","jk","loading","prosesVote","detailCandidate","onClick","Image","roundedCircle","Button","size","style","Spinner","as","animation","role","ResultVoteComponent","suara","totalVote","ProgressBar","label","now","max","API_URL","MySwal","withReactContent","Swal","VotingComponent","props","setState","confirm","fire","html","imageUrl","confirmButtonText","confirmButtonColor","imageWidth","imageAlt","state","v_hasilVote","kandidat","cekVote","isLoding","namaVoted","this","length","getKandidat","prevtoken","isLoading","axios","get","then","res","data","catch","error","console","log","respone","allowOutsideClick","showDenyButton","denyButtonText","denyButtonColor","result","isConfirmed","response","setTimeout","alert","refresh","bind","isDenied","status","pesan","didOpen","showLoading","timer","md","lg","Card","Body","Text","map","kandidat_id","token_no","kandidat_nama","kandidat_keterangan","kandidat_foto","kandidat_umur","kandidat_kelamin","Title","jml_vote","CardTokenComponent","nama","voteSuara","jmlKandidat","getToken","youVoted","Badge","Home","noToken","getVote","getAllToken","refreshData","dataToken","totalData","window","scrollTo","token_nama","total_vote","d","jml_kandidat","anda_vote","token_id","App","path","component","exact","Tentang","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PA8BeA,EAzBgB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChC,OACE,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,UAAU,YAAvD,SACE,eAACC,EAAA,EAAD,WACE,eAACL,EAAA,EAAOM,MAAR,CAAcF,UAAU,UAAUG,KAAMC,kBAAxC,UACE,qBAAKC,IAAI,OAAOC,IAAI,yBAAyBC,MAAM,KAAKC,OAAO,KAAKR,UAAU,sCADhF,cAGA,cAACJ,EAAA,EAAOa,OAAR,CAAe,gBAAc,qBAC7B,cAACb,EAAA,EAAOc,SAAR,CAAiBC,GAAG,mBAApB,SACE,cAACC,EAAA,EAAD,CAAKZ,UAAU,UAAf,SACE,eAACY,EAAA,EAAIC,KAAL,CAAUV,KAAMC,kBAAwBJ,UAAqB,SAAVL,EAAmB,cAAgB,OAAtF,UACE,cAAC,IAAD,CAAiBmB,KAAMC,IAAQf,UAAU,SAD3C,uB,kBCVSgB,E,4JACnB,WACE,OACE,8BACE,cAACf,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CAAKjB,UAAU,yBAAf,SACE,cAACkB,EAAA,EAAD,CAAKlB,UAAU,cAAf,SACE,qBAAIA,UAAU,MAAd,wBACa,cAAC,IAAD,CAAiBc,KAAMK,IAASC,MAAM,QADnD,kC,GAP+BC,aCY9BC,EAdgB,SAAC,GAAqB,IAAnB3B,EAAkB,EAAlBA,MAAO4B,EAAW,EAAXA,KACvC,OACE,qBAAKvB,UAAoB,SAATuB,EAAkB,iBAAmB,kBAArD,SACE,cAACtB,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKlB,UAAU,cAAf,SACE,6BAAKL,a,oCCcF6B,EApBkB,SAAC,GAAmF,IAAjFb,EAAgF,EAAhFA,GAAIc,EAA4E,EAA5EA,MAAOC,EAAqE,EAArEA,IAAKC,EAAgE,EAAhEA,KAAMC,EAA0D,EAA1DA,IAAKC,EAAqD,EAArDA,KAAMC,EAA+C,EAA/CA,GAAIC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,gBAC5F,OACE,gCACE,sBAAKjC,UAAU,iCAAf,UACE,sBAAKA,UAAU,2BAA2BkC,QAAS,kBAAMD,EAAgBN,EAAMC,EAAKF,EAAKG,EAAMC,IAA/F,UACE,cAACK,EAAA,EAAD,CAAO7B,IAAa,KAARsB,EAAa,wBAA0BA,EAAKrB,MAAM,KAAKC,OAAO,KAAK4B,eAAa,IAC5F,oBAAIpC,UAAU,YAAd,SAA2B2B,OAE7B,eAACU,EAAA,EAAD,CAAQvC,QAAQ,OAAOwC,KAAK,KAAKC,MAAO,CAAEhC,MAAO,QAAUP,WAAuB,IAAZ+B,EAAmB,qBAAuB,YAAaG,QAAS,kBAAMF,EAAWL,EAAMhB,EAAIc,IAAjK,UACE,iCACE,cAACe,EAAA,EAAD,CAASC,GAAG,OAAOzC,WAAuB,IAAZ+B,EAAmB,UAAY,SAAUW,UAAU,SAASJ,KAAK,KAAKK,KAAK,SAAS,cAAY,WAEhI,sBAAM3C,WAAuB,IAAZ+B,EAAoB,UAAY,SAAjD,wBAGJ,2B,SCASa,EAfoB,SAAC,GAAqC,IAAnCjB,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,IAAKiB,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACtD,OACE,gCACE,sBAAK9C,UAAU,SAAf,UACE,cAACmC,EAAA,EAAD,CAAO7B,IAAa,KAARsB,EAAa,wBAA0BA,EAAKrB,MAAM,KAAKC,OAAO,KAAK4B,eAAa,IAC5F,sBAAKpC,UAAU,YAAf,UACE,oBAAIA,UAAU,OAAd,SAAsB2B,IACtB,cAACoB,EAAA,EAAD,CAAa/C,UAAU,OAAOgD,MAAK,UAAKH,EAAL,UAAoBI,IAAKJ,EAAO/C,QAAQ,OAAOoD,IAAKJ,UAG3F,2B,kCCbOK,EAAU,+C,iBCWjBC,EAASC,IAAiBC,KAEXC,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAYRxB,WAAa,SAACL,EAAMhB,EAAIc,GACtB,EAAKgC,SAAS,CACZ9C,GAAIA,IAEN,EAAK+C,QAAQ/B,EAAMhB,EAAIc,IAjBN,EAmInBQ,gBAAkB,SAACtC,EAAOiC,EAAKF,EAAKG,EAAMC,GACxCwB,IAAKK,KAAK,CACRhE,MAAOA,EACPiE,KAAM,oCAAsClC,EAAtC,2CAA8FG,EAA9F,sCAAkJC,EAAK,UAC7J+B,SAAkB,KAARjC,EAAa,wBAA0BA,EACjDkC,kBAAmB,QACnBC,mBAAoB,OACpBC,WAAY,IACZC,SAAUtE,KAzIZ,EAAKuE,MAAQ,CACXvD,GAAI,GACJwD,aAAa,EACbC,SAAU,GACVC,QAAS,GACTC,UAAU,EACV7C,MAAO,EAAK+B,MAAM/B,MAClB8C,UAAW,IATI,E,qDAoBnB,WACMC,KAAKhB,MAAM/B,MAAMgD,OAAS,GAC5BD,KAAKE,gB,gCAIT,SAAmBC,GACbH,KAAKhB,MAAM/B,MAAMgD,OAAS,GACxBE,EAAUlD,QAAU+C,KAAKhB,MAAM/B,QACjC+C,KAAKf,SAAS,CAAEhC,MAAO+C,KAAKhB,MAAM/B,QAClC+C,KAAKE,cACLF,KAAKH,a,yBAKX,WAAe,IAAD,OACZG,KAAKf,SAAS,CAAEmB,WAAW,IAC3BC,IACGC,IAAI3B,EAAU,wBAA0BqB,KAAKhB,MAAM/B,OACnDsD,MAAK,SAACC,GACL,IAAMZ,EAAWY,EAAIC,KACrB,EAAKxB,SAAS,CAAEW,WAAUE,UAAU,IACpC,EAAKD,aAENa,OAAM,SAACC,GACNC,QAAQC,IAAI,aAAcF,Q,qBAIhC,WAAW,IAAD,OACRX,KAAKf,SAAS,CAAEmB,WAAW,IAC3BC,IACGC,IAAI3B,EAAU,kBAAoBqB,KAAKN,MAAMzC,OAC7CsD,MAAK,SAACC,GACL,IAAMX,EAAUW,EAAIC,KACpB,EAAKxB,SAAS,CAAEY,QAASA,EAAQiB,QAASf,UAAWF,EAAQD,SAAUE,UAAU,OAElFY,OAAM,SAACC,GACNC,QAAQC,IAAI,aAAcF,Q,qBAIhC,SAAQxD,EAAMhB,EAAIc,GAAQ,IAAD,OACvB2B,EAAOO,KAAK,CACVC,KAAM,sBAAwBjC,EAAO,cACrCb,KAAM,UACNyE,mBAAmB,EACnBC,gBAAgB,EAChB1B,kBAAkB,aAClB2B,eAAe,QACf1B,mBAAoB,OACpB2B,gBAAiB,YAChBX,MAAK,SAACY,GACHA,EAAOC,aACT,EAAK7D,UACL,EAAK0B,SAAS,CAAEa,UAAU,IAC1BO,IAAMC,IAAI3B,EAAU,wBAA0BxC,EAAK,IAAMc,GAAOsD,MAAK,SAACc,GACpEC,WACE,WACEtB,KAAKuB,MAAM,gBAAiB,oCAAqC,WACjEvB,KAAKhB,MAAMwC,QAAQxB,KAAKN,MAAMzC,OAC9B+C,KAAKE,eACLuB,KAAK,GACP,SAGKN,EAAOO,UAChBJ,WACE,WACEtB,KAAKf,SAAS,CAAE9C,GAAI,MACpBsF,KAAK,GACP,U,mBAMR,SAAME,EAAQC,EAAOtF,GAAO,IAAD,OACzBsC,EAAOO,KAAK,CACVhE,MAAOwG,EACPvC,KAAM,SAAWwC,EAAQ,UACzBtF,KAAMA,EACNyE,mBAAmB,EACnBzB,kBAAkB,MAClBC,mBAAoB,SACnBgB,MAAK,WACN,EAAKtB,SAAS,CAAE9C,GAAI,U,qBAIxB,WACE2C,IAAKK,KAAK,CACRhE,MAAO,WACP4F,mBAAmB,EACnBc,QAAS,WACP/C,IAAKgD,mB,0BAKX,WACEhD,IAAKK,KAAK,CACRhE,MAAO,WACP0G,QAAS,WACP/C,IAAKgD,eAEPC,MAAO,Q,oBAgBX,WAAU,IAAD,OACP,OACE,qBAAKvG,UAAU,UAAf,SACE,eAACC,EAAA,EAAD,WAEE,qBAAKD,UAAkC,UAAvBwE,KAAKN,MAAMG,QAAsB,SAAW,UAA5D,SACE,cAACpD,EAAA,EAAD,CAAKjB,UAAU,8BAAf,SACE,cAACkB,EAAA,EAAD,CAAKsF,GAAG,KAAKC,GAAG,IAAhB,SACE,cAACC,EAAA,EAAD,CAAM1G,UAAU,iBAAhB,SACE,eAAC0G,EAAA,EAAKC,KAAN,CAAW3G,UAAU,yBAArB,UACE,wBAAQA,WAAmC,IAAxBwE,KAAKN,MAAMI,SAAoB,UAAY,SAA9D,SACE,cAAC9B,EAAA,EAAD,CAASE,UAAU,SAASC,KAAK,SAAjC,SACE,sBAAM3C,UAAU,kBAAhB,4BAGJ,cAAC0G,EAAA,EAAKE,KAAN,UACGpC,KAAKN,MAAME,SAASyC,KAAI,SAACzC,GAAD,OACvB,cAAC,EAAD,CAEEzD,GAAIyD,EAAS0C,YACbrF,MAAO2C,EAAS2C,SAChBpF,KAAMyC,EAAS4C,cACftF,IAAK0C,EAAS6C,oBACdrF,IAAKwC,EAAS8C,cACdrF,KAAMuC,EAAS+C,cACfrF,GAAIsC,EAASgD,iBACbrF,QAAS,EAAKmC,MAAMvD,KAAOyD,EAAS0C,YACpC9E,WAAY,EAAKA,WACjBC,gBAAiB,EAAKA,iBAVjBmC,EAAS0C,6BAqB9B,qBAAK9G,UAAkC,UAAvBwE,KAAKN,MAAMG,QAAsB,UAAY,SAA7D,SACE,cAACpD,EAAA,EAAD,CAAKjB,UAAU,8BAAf,SACE,cAACkB,EAAA,EAAD,CAAKsF,GAAG,KAAKC,GAAG,IAAhB,SACE,cAACC,EAAA,EAAD,CAAM1G,UAAU,iBAAhB,SACE,eAAC0G,EAAA,EAAKC,KAAN,CAAW3G,UAAU,yBAArB,UACE,wBAAQA,WAAmC,IAAxBwE,KAAKN,MAAMI,SAAoB,UAAY,SAA9D,SACE,cAAC9B,EAAA,EAAD,CAASE,UAAU,SAASC,KAAK,SAAjC,SACE,sBAAM3C,UAAU,kBAAhB,4BAIJ,cAAC0G,EAAA,EAAKW,MAAN,CAAYrH,UAAU,sBAAtB,wBAC0B,KAAzBwE,KAAKN,MAAMK,UAAmB,GAAK,8CAAiBC,KAAKN,MAAMK,aAChE,cAACmC,EAAA,EAAKE,KAAN,CAAW5G,UAAU,kBAArB,SACGwE,KAAKN,MAAME,SAASyC,KAAI,SAACzC,GAAD,OACvB,cAAC,EAAD,CAAqBzC,KAAMyC,EAAS4C,cAAepF,IAAKwC,EAAS8C,cAAerE,MAAOuB,EAASkD,SAAUxE,UAAW,EAAKU,MAAMV,qC,GAtM3GzB,a,SCW9BkG,EArBmB,SAAC,GAA4E,IAA1E3C,EAAyE,EAAzEA,UAAW4C,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,UAAWC,EAA6C,EAA7CA,YAAajG,EAAgC,EAAhCA,MAAOkG,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SAC7F,OACE,8BACE,cAAClB,EAAA,EAAD,CAAM1G,UAAU,iBAAhB,SACE,eAAC0G,EAAA,EAAKC,KAAN,WACE,cAACD,EAAA,EAAKW,MAAN,UAAaG,IACb,eAACd,EAAA,EAAKE,KAAN,WACE,eAACiB,EAAA,EAAD,CAAOhI,GAAG,YAAV,UAAuB4H,EAAvB,YACA,eAACI,EAAA,EAAD,CAAOhI,GAAG,YAAV,UAAuB6H,EAAvB,aACc,IAAbE,EAAoB,cAACC,EAAA,EAAD,CAAOhI,GAAG,UAAV,6BAA8C,MAErE,eAACwC,EAAA,EAAD,CAAQvC,SAAsB,IAAb8H,EAAoB,UAAY,OAAQtF,KAAK,KAAKtC,WAAyB,IAAd4E,EAAqB,WAAa,GAAI1C,QAAS,kBAAMyF,EAASlG,IAA5I,UACE,cAACe,EAAA,EAAD,CAASC,GAAG,OAAOC,UAAU,SAAS1C,WAAyB,IAAd4E,EAAqB,UAAY,SAAUtC,KAAK,KAAKK,KAAK,SAAS,cAAY,SAChI,uBAAM3C,WAAyB,IAAd4E,EAAqB,SAAW,UAAjD,eAA2E,IAAbgD,EAAoB,QAAU,0BCRnFE,E,kDACnB,WAAYtE,GAAQ,IAAD,8BACjB,cAAMA,IAsCRmE,SAAW,SAAClG,GACV,EAAKgC,SAAS,CACZsE,QAAStG,EACTd,GAAIc,IAEN,EAAKuG,QAAQvG,GACb,EAAKwG,eA7CY,EA4DnBC,YAAc,SAACzG,GACb,EAAKkG,SAASlG,IA1Dd,EAAKyC,MAAQ,CACXzC,MAAO,GACP0G,UAAW,GACXJ,QAAS,GACTpH,GAAI,GACJyH,UAAW,GARI,E,qDAWnB,WAAqB,IAAD,OAClBvD,IACGC,IAAI3B,EAAU,cACd4B,MAAK,SAACC,GACL,IAAMmD,EAAYnD,EAAIC,KACtB,EAAKxB,SAAS,CAAE0E,YAAWC,UAAWD,EAAU1D,OAAQsD,QAASI,EAAU,GAAGpB,WAC9E,EAAKiB,QAAQG,EAAU,GAAGpB,aAE3B7B,OAAM,SAACC,GACNC,QAAQC,IAAI,aAAcF,Q,qBAMhC,SAAQ1D,GAAQ,IAAD,OACboD,IACGC,IAAI3B,EAAU,cAAgB1B,GAC9BsD,MAAK,SAACC,GACL,IAAMvD,EAAQuD,EAAIC,KAClB,EAAKxB,SAAS,CAAEhC,QAAOd,GAAI,KAC3B0H,OAAOC,SAAS,EAAG,MAEpBpD,OAAM,SAACC,GACNC,QAAQC,IAAI,aAAcF,Q,yBAahC,WAAe,IAAD,OACZN,IACGC,IAAI3B,EAAU,cACd4B,MAAK,SAACC,GACL,IAAMmD,EAAYnD,EAAIC,KACtB,EAAKxB,SAAS,CAAE0E,YAAWC,UAAWD,EAAU1D,YAEjDS,OAAM,SAACC,GACNC,QAAQC,IAAI,aAAcF,Q,oBAOhC,WAAU,IAAD,OACP,EAAiCX,KAAKN,MAA9BzC,EAAR,EAAQA,MAAO0G,EAAf,EAAeA,UAAWxH,EAA1B,EAA0BA,GAC1B,OACE,gCACE,cAAC,EAAD,CAAiBhB,MAAO8B,EAAMoF,KAAI,SAACpF,GAAD,OAAWA,EAAM8G,cAAahH,KAA6B,KAAvBiD,KAAKN,MAAM6D,QAAiB,OAAS,SAC3G,cAAC,EAAD,CAAiBtG,MAAOA,EAAMoF,KAAI,SAACpF,GAAD,OAAWA,EAAMsF,YAAWf,QAASxB,KAAK0D,YAAapF,UAAWrB,EAAMoF,KAAI,SAACpF,GAAD,OAAWA,EAAM+G,gBAC/H,eAACvI,EAAA,EAAD,CAAWD,UAAWwE,KAAKN,MAAMkE,UAAY,EAAI,UAAY,SAA7D,UACE,cAACnH,EAAA,EAAD,CAAKjB,UAAkC,KAAvBwE,KAAKN,MAAM6D,QAAiB,cAAgB,eAA5D,SACE,cAAC7G,EAAA,EAAD,UACE,oBAAIlB,UAAU,gCAAd,yBAGJ,cAACiB,EAAA,EAAD,UACGkH,EAAUtB,KAAI,SAAC4B,GAAD,OACbA,EAAE1B,WAAa,EAAK7C,MAAM6D,QACxB,GAEA,cAAC7G,EAAA,EAAD,CAAKsF,GAAI,EAAT,SACE,cAAC,EAAD,CACE5B,UAAWjE,IAAO8H,EAAE1B,SAEpBS,KAAMiB,EAAEF,WACRd,UAAWgB,EAAEnB,SACb7F,MAAOgH,EAAE1B,SACTW,YAAae,EAAEC,aACff,SAAU,EAAKA,SACfC,SAAUa,EAAEE,WANPF,EAAEG,2B,GApFOvH,aCJbyG,E,4JACnB,WACE,OACE,gCACE,cAAC,EAAD,CAAiBnI,MAAM,mBAAmB4B,KAAK,SAC/C,qBAAKvB,UAAU,UAAf,SACE,cAACC,EAAA,EAAD,UACE,cAACgB,EAAA,EAAD,CAAKjB,UAAU,8BAAf,SACE,cAACkB,EAAA,EAAD,CAAKsF,GAAG,IAAR,SACE,cAACE,EAAA,EAAD,CAAM1G,UAAU,YAAhB,SACE,cAAC0G,EAAA,EAAKC,KAAN,UACE,cAACD,EAAA,EAAKE,KAAN,CAAW5G,UAAU,eAArB,ge,GAXcqB,aCEbwH,E,kDACnB,WAAYrF,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXvE,MAAO,IAHQ,E,qDAOnB,WAEI6E,KAAKf,SAAS,CACZ9D,MAAO,W,oBAab,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAiBA,MAAO6E,KAAKN,MAAMvE,QACnC,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmJ,KAAM1I,mBAA8B2I,UAAWjB,EAAMkB,OAAK,IACjE,cAAC,IAAD,CAAOF,KAAM1I,0BAAqC2I,UAAWE,EAASD,OAAK,SAG/E,cAAC,EAAD,W,GAlCyB3H,aCMlB6H,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrE,MAAK,YAAkD,IAA/CsE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.fb27c3a4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHome, faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const NavbarComponent = ({ title }) => {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"shadow-sm\">\r\n      <Container>\r\n        <Navbar.Brand className=\"fw-bold\" href={process.env.PUBLIC_URL}>\r\n          <img alt=\"logo\" src=\"./assets/logo/logo.svg\" width=\"30\" height=\"30\" className=\"d-inline-block align-top App-logo\" /> Polling\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link href={process.env.PUBLIC_URL} className={title === \"home\" ? \"me-4 active\" : \"me-4\"}>\r\n              <FontAwesomeIcon icon={faHome} className=\"me-2\" />\r\n              Beranda\r\n            </Nav.Link>\r\n            {/* <Nav.Link href={process.env.PUBLIC_URL + \"/tentang\"} className={title === \"tentang\" ? \"active\" : \"\"}>\r\n              <FontAwesomeIcon icon={faUser} className=\"me-2\" />\r\n              Tentang\r\n            </Nav.Link> */}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavbarComponent;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default class FooterComponent extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col className=\"text-center\">\r\n              <h6 className=\"p-4\">\r\n                Created by <FontAwesomeIcon icon={faHeart} color=\"red\" /> Radhian Sobarna\r\n              </h6>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nexport const HeaderComponent = ({ title, show }) => {\r\n  return (\r\n    <div className={show === \"hide\" ? \"d-none section\" : \"d-block section\"}>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center\">\r\n            <h1>{title}</h1>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderComponent;\r\n","import React from \"react\";\r\nimport { Button, Image, Spinner } from \"react-bootstrap\";\r\n\r\nexport const ListUserComponent = ({ id, token, ket, name, img, umur, jk, loading, prosesVote, detailCandidate }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between\">\r\n        <div className=\"d-flex flex-fill pointer\" onClick={() => detailCandidate(name, img, ket, umur, jk)}>\r\n          <Image src={img === \"\" ? \"./assets/img/user.svg\" : img} width=\"45\" height=\"45\" roundedCircle />\r\n          <h6 className=\"mt-2 ms-3\">{name}</h6>\r\n        </div>\r\n        <Button variant=\"dark\" size=\"sm\" style={{ width: \"65px\" }} className={loading === true ? \"disabled shadow-sm\" : \"shadow-sm\"} onClick={() => prosesVote(name, id, token)}>\r\n          <center>\r\n            <Spinner as=\"span\" className={loading === true ? \"d-block\" : \"d-none\"} animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\r\n          </center>\r\n          <span className={loading === false ? \"d-block\" : \"d-none\"}>Vote</span>\r\n        </Button>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListUserComponent;\r\n","import React from \"react\";\r\nimport { Image, ProgressBar } from \"react-bootstrap\";\r\n\r\nexport const ResultVoteComponent = ({ name, img, suara, totalVote }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex\">\r\n        <Image src={img === \"\" ? \"./assets/img/user.svg\" : img} width=\"45\" height=\"45\" roundedCircle />\r\n        <div className=\"flex-fill\">\r\n          <h6 className=\"ms-3\">{name}</h6>\r\n          <ProgressBar className=\"ms-3\" label={`${suara} Suara`} now={suara} variant=\"dark\" max={totalVote} />\r\n        </div>\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResultVoteComponent;\r\n","export const API_URL = \"https://www.radhiansobarna.com/demo/polling/\";\r\n","import React, { Component } from \"react\";\r\nimport { Card, Container, Col, Row, Spinner } from \"react-bootstrap\";\r\nimport ListUserComponent from \"./ListUserComponent\";\r\nimport ResultVoteComponent from \"./ResultVoteComponent\";\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\n\r\nimport { API_URL } from \"../utils/constants\";\r\nimport axios from \"axios\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\n\r\nexport default class VotingComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      v_hasilVote: false,\r\n      kandidat: [],\r\n      cekVote: \"\",\r\n      isLoding: true,\r\n      token: this.props.token,\r\n      namaVoted: \"\",\r\n    };\r\n  }\r\n\r\n  prosesVote = (name, id, token) => {\r\n    this.setState({\r\n      id: id,\r\n    });\r\n    this.confirm(name, id, token);\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.token.length > 0) {\r\n      this.getKandidat();\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevtoken) {\r\n    if (this.props.token.length > 0) {\r\n      if (prevtoken.token !== this.props.token) {\r\n        this.setState({ token: this.props.token });\r\n        this.getKandidat();\r\n        this.cekVote();\r\n      }\r\n    }\r\n  }\r\n\r\n  getKandidat() {\r\n    this.setState({ isLoading: true });\r\n    axios\r\n      .get(API_URL + \"kandidat/dataByToken/\" + this.props.token)\r\n      .then((res) => {\r\n        const kandidat = res.data;\r\n        this.setState({ kandidat, isLoding: false });\r\n        this.cekVote();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error yaa \", error);\r\n      });\r\n  }\r\n\r\n  cekVote() {\r\n    this.setState({ isLoading: true });\r\n    axios\r\n      .get(API_URL + \"voting/cekVote/\" + this.state.token)\r\n      .then((res) => {\r\n        const cekVote = res.data;\r\n        this.setState({ cekVote: cekVote.respone, namaVoted: cekVote.kandidat, isLoding: false });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error yaa \", error);\r\n      });\r\n  }\r\n\r\n  confirm(name, id, token) {\r\n    MySwal.fire({\r\n      html: \"<h4>Yakin pilih <b>\" + name + \"</b> ?</h4>\",\r\n      icon: \"warning\",\r\n      allowOutsideClick: false,\r\n      showDenyButton: true,\r\n      confirmButtonText: `Yakin dong`,\r\n      denyButtonText: `Batal`,\r\n      confirmButtonColor: \"#000\",\r\n      denyButtonColor: \"#dc3545\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        this.loading();\r\n        this.setState({ isLoding: false });\r\n        axios.get(API_URL + \"voting/proses_voting/\" + id + \"/\" + token).then((response) => {\r\n          setTimeout(\r\n            function () {\r\n              this.alert(\"Berhasil Vote\", \"Terimakasih telah berpartisipasi.\", \"success\");\r\n              this.props.refresh(this.state.token);\r\n              this.getKandidat();\r\n            }.bind(this),\r\n            100\r\n          );\r\n        });\r\n      } else if (result.isDenied) {\r\n        setTimeout(\r\n          function () {\r\n            this.setState({ id: \"\" });\r\n          }.bind(this),\r\n          300\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  alert(status, pesan, icon) {\r\n    MySwal.fire({\r\n      title: status,\r\n      html: \"<span>\" + pesan + \"</span>\",\r\n      icon: icon,\r\n      allowOutsideClick: false,\r\n      confirmButtonText: `Oke`,\r\n      confirmButtonColor: \"#000\",\r\n    }).then(() => {\r\n      this.setState({ id: \"\" });\r\n    });\r\n  }\r\n\r\n  loading() {\r\n    Swal.fire({\r\n      title: \"Memuat..\",\r\n      allowOutsideClick: false,\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n  }\r\n\r\n  loadingClose() {\r\n    Swal.fire({\r\n      title: \"Memuat..\",\r\n      didOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n      timer: 100,\r\n    });\r\n  }\r\n\r\n  detailCandidate = (title, img, ket, umur, jk) => {\r\n    Swal.fire({\r\n      title: title,\r\n      html: \"<span class='badge bg-dark me-2'>\" + ket + \"</span>\" + \"<span class='badge bg-dark me-2'>\" + umur + \"</span>\" + \"<span class='badge bg-dark'>\" + jk + \"</span>\",\r\n      imageUrl: img === \"\" ? \"./assets/img/user.svg\" : img,\r\n      confirmButtonText: \"Tutup\",\r\n      confirmButtonColor: \"#000\",\r\n      imageWidth: 150,\r\n      imageAlt: title,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"section\">\r\n        <Container>\r\n          {/* Contoh Vote */}\r\n          <div className={this.state.cekVote === \"voted\" ? \"d-none\" : \"d-block\"}>\r\n            <Row className=\"justify-content-center mb-4\">\r\n              <Col md=\"12\" lg=\"8\">\r\n                <Card className=\"shadow-sm mb-4\">\r\n                  <Card.Body className=\"p-md-5 p-4 text-center\">\r\n                    <center className={this.state.isLoding === true ? \"d-block\" : \"d-none\"}>\r\n                      <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </Spinner>\r\n                    </center>\r\n                    <Card.Text>\r\n                      {this.state.kandidat.map((kandidat) => (\r\n                        <ListUserComponent\r\n                          key={kandidat.kandidat_id}\r\n                          id={kandidat.kandidat_id}\r\n                          token={kandidat.token_no}\r\n                          name={kandidat.kandidat_nama}\r\n                          ket={kandidat.kandidat_keterangan}\r\n                          img={kandidat.kandidat_foto}\r\n                          umur={kandidat.kandidat_umur}\r\n                          jk={kandidat.kandidat_kelamin}\r\n                          loading={this.state.id === kandidat.kandidat_id ? true : false}\r\n                          prosesVote={this.prosesVote}\r\n                          detailCandidate={this.detailCandidate}\r\n                        />\r\n                      ))}\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          {/* Contoh Sudah Vote */}\r\n          <div className={this.state.cekVote === \"voted\" ? \"d-block\" : \"d-none\"}>\r\n            <Row className=\"justify-content-center mb-4\">\r\n              <Col md=\"12\" lg=\"8\">\r\n                <Card className=\"shadow-sm mb-4\">\r\n                  <Card.Body className=\"p-md-5 p-4 text-center\">\r\n                    <center className={this.state.isLoding === true ? \"d-block\" : \"d-none\"}>\r\n                      <Spinner animation=\"border\" role=\"status\">\r\n                        <span className=\"visually-hidden\">Loading...</span>\r\n                      </Spinner>\r\n                    </center>\r\n\r\n                    <Card.Title className=\"fw-bold text-center\">Hasil Vote</Card.Title>\r\n                    {this.state.namaVoted === \"\" ? \"\" : <span>Anda vote {this.state.namaVoted}</span>}\r\n                    <Card.Text className=\"text-start mt-4\">\r\n                      {this.state.kandidat.map((kandidat) => (\r\n                        <ResultVoteComponent name={kandidat.kandidat_nama} img={kandidat.kandidat_foto} suara={kandidat.jml_vote} totalVote={this.props.totalVote} />\r\n                      ))}\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Card, Button, Badge, Spinner } from \"react-bootstrap\";\r\n\r\nexport const CardTokenComponent = ({ isLoading, nama, voteSuara, jmlKandidat, token, getToken, youVoted }) => {\r\n  return (\r\n    <div>\r\n      <Card className=\"shadow-sm mb-4\">\r\n        <Card.Body>\r\n          <Card.Title>{nama}</Card.Title>\r\n          <Card.Text>\r\n            <Badge bg=\"dark me-1\">{voteSuara} Suara</Badge>\r\n            <Badge bg=\"dark me-1\">{jmlKandidat} Orang</Badge>\r\n            {youVoted === true ? <Badge bg=\"success\">Anda sudah vote</Badge> : \"\"}\r\n          </Card.Text>\r\n          <Button variant={youVoted === true ? \"success\" : \"dark\"} size=\"md\" className={isLoading === true ? \"disabled\" : \"\"} onClick={() => getToken(token)}>\r\n            <Spinner as=\"span\" animation=\"border\" className={isLoading === true ? \"d-block\" : \"d-none\"} size=\"sm\" role=\"status\" aria-hidden=\"true\" />\r\n            <span className={isLoading === true ? \"d-none\" : \"d-block\"}> {youVoted === true ? \"Lihat\" : \"Vote yuk!\"}</span>\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardTokenComponent;\r\n","import React, { Component } from \"react\";\r\nimport HeaderComponent from \"../components/HeaderComponent\";\r\nimport VotingComponent from \"../components/VotingComponent\";\r\nimport { API_URL } from \"../utils/constants\";\r\nimport axios from \"axios\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport CardTokenComponent from \"../components/CardTokenComponent\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      token: [],\r\n      dataToken: [],\r\n      noToken: \"\",\r\n      id: \"\",\r\n      totalData: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(API_URL + \"token/data\")\r\n      .then((res) => {\r\n        const dataToken = res.data;\r\n        this.setState({ dataToken, totalData: dataToken.length, noToken: dataToken[0].token_no });\r\n        this.getVote(dataToken[0].token_no);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error yaa \", error);\r\n      });\r\n  }\r\n\r\n  // componentDidUpdate(prevState) {}\r\n\r\n  getVote(token) {\r\n    axios\r\n      .get(API_URL + \"token/vote/\" + token)\r\n      .then((res) => {\r\n        const token = res.data;\r\n        this.setState({ token, id: \"\" });\r\n        window.scrollTo(0, 0);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error yaa \", error);\r\n      });\r\n  }\r\n\r\n  getToken = (token) => {\r\n    this.setState({\r\n      noToken: token,\r\n      id: token,\r\n    });\r\n    this.getVote(token);\r\n    this.getAllToken();\r\n  };\r\n\r\n  getAllToken() {\r\n    axios\r\n      .get(API_URL + \"token/data\")\r\n      .then((res) => {\r\n        const dataToken = res.data;\r\n        this.setState({ dataToken, totalData: dataToken.length });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error yaa \", error);\r\n      });\r\n  }\r\n\r\n  refreshData = (token) => {\r\n    this.getToken(token);\r\n  };\r\n  render() {\r\n    const { token, dataToken, id } = this.state;\r\n    return (\r\n      <div>\r\n        <HeaderComponent title={token.map((token) => token.token_nama)} show={this.state.noToken === \"\" ? \"hide\" : \"show\"} />\r\n        <VotingComponent token={token.map((token) => token.token_no)} refresh={this.refreshData} totalVote={token.map((token) => token.total_vote)} />\r\n        <Container className={this.state.totalData > 1 ? \"d-block\" : \"d-none\"}>\r\n          <Row className={this.state.noToken === \"\" ? \"d-none mb-3\" : \"d-block mb-3\"}>\r\n            <Col>\r\n              <h4 className=\"text-center text-dark fw-bold\">Lainnya</h4>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            {dataToken.map((d) =>\r\n              d.token_no === this.state.noToken ? (\r\n                \"\"\r\n              ) : (\r\n                <Col md={4}>\r\n                  <CardTokenComponent\r\n                    isLoading={id === d.token_no ? true : false}\r\n                    key={d.token_id}\r\n                    nama={d.token_nama}\r\n                    voteSuara={d.jml_vote}\r\n                    token={d.token_no}\r\n                    jmlKandidat={d.jml_kandidat}\r\n                    getToken={this.getToken}\r\n                    youVoted={d.anda_vote}\r\n                  />\r\n                </Col>\r\n              )\r\n            )}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport HeaderComponent from \"../components/HeaderComponent\";\r\nimport { Card, Container, Col, Row } from \"react-bootstrap\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <HeaderComponent title=\"Apa itu Polling?\" show=\"show\" />\r\n        <div className=\"section\">\r\n          <Container>\r\n            <Row className=\"mb-5 justify-content-center\">\r\n              <Col md=\"8\">\r\n                <Card className=\"shadow-sm\">\r\n                  <Card.Body>\r\n                    <Card.Text className=\"text-justify\">\r\n                      Polling adalah metode pengumpulan suara yang lebih luas jangkauan dan cara pemungutan suaranya, tidak mesti menggunakan kertas pemilihan saja. Partisipan yang berhak ikut serta\r\n                      pun lebih luas jangkauannya, tidak hanya suatu kelompok di tempat itu saja. Misalnya diikuti oleh semua orang yang berusia 18 tahun ke atas. Hasilnya pun biasanya hanya diambil\r\n                      beberapa sampel saja hanya untuk mendapatkan rata-rata jawaban dari pertanyaan yang diajukan.\r\n                    </Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { NavbarComponent } from \"./components\";\nimport FooterComponent from \"./components/FooterComponent\";\nimport { Home, Tentang } from \"./pages\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if (process.env.PUBLIC_URL + \"/\" === process.env.PUBLIC_URL + \"/\") {\n      this.setState({\n        title: \"home\",\n      });\n    } else if (process.env.PUBLIC_URL + \"/tentang\" === process.env.PUBLIC_URL + \"/tentang\") {\n      this.setState({\n        title: \"tentang\",\n      });\n    } else {\n      this.setState({\n        title: \"\",\n      });\n    }\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <NavbarComponent title={this.state.title} />\n        <main>\n          <Switch>\n            <Route path={process.env.PUBLIC_URL + \"/\"} component={Home} exact />\n            <Route path={process.env.PUBLIC_URL + \"/tentang\"} component={Tentang} exact />\n          </Switch>\n        </main>\n        <FooterComponent />\n      </BrowserRouter>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}